<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.dao.IUserDao">


    <!-- 配置 查询结果的列名和实体类的属性名的对应关系 -->
    <resultMap id="userMap" type="com.itheima.domain.User">
        <!-- 主键字段的对应 -->
        <id property="userId" column="id"></id>
        <!--非主键字段的对应-->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"/>
        <result property="userBirthday" column="birthday"></result>
        <collection property="accounts" ofType="com.itheima.domain.Account">
            <id column="aid" property="id"/>
            <result column="uid" property="uid"/>
            <result column="money" property="money"/>
        </collection>
    </resultMap>
    <!-- 查询所有 -->
    <select id="findAll" resultMap="userMap">
        <!--select id as userId,username as userName,address as userAddress,sex as userSex,birthday as userBirthday from user;-->
        select u.*,a.id as aid ,a.uid,a.money from user u left outer join account
        a on u.id =a.uid
    </select>

    <!-- 根据id查询用户 -->
    <select id="findById" parameterType="INT" resultMap="userMap">
        <include refid="defaultSql"></include>
        where id = #{uid}
    </select>

    <insert id="saveUser" parameterType="com.itheima.domain.User">
        <selectKey keyColumn="id" keyProperty="userId" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday)
        values(#{userName},#{userAddress},#{userSex},#{userBirthday})
    </insert>

    <insert id="batch" parameterType="java.util.List">
        insert  into user(username,birthday,sex,address,user_code,start_time) values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.userName},
            #{item.userBirthday},
            IFNULL(#{item.userSex},''),
            #{item.userAddress},
            #{item.code},
            now()
            )
        </foreach>
        ON DUPLICATE KEY UPDATE
        username = values (username),
        birthday = values (birthday),
        sex = values (sex),
        address =values (address),
        user_code =values (user_code)
    </insert>

    <!-- 更新用户 -->
    <update id="updateUser" parameterType="com.itheima.domain.User">
        update user set username=#{userName},address=#{userAddress},sex=#{userSex},birthday=#{userBirthday} where id=#{userId}
    </update>


    <select id="findByUser" resultMap="userMap" parameterType="com.itheima.domain.User">
        <include refid="defaultSql"></include>
        <where>
            <if test="userName!=null and userName != '' ">
                and username like #{userName}
            </if>
            <if test="userAddress != null and userAddress !='' ">
                and address like #{userAddress}
            </if>
            <if test="userSex != null and userSex != '' ">
                and sex = #{userSex}
            </if>
        </where>
    </select>


    <!-- 查询所有用户在 id 的集合之中 -->
    <select id="findInIds" resultMap="userMap" parameterType="com.itheima.domain.QueryVo">
        <!-- select * from user where id in (1,2,3,4,5); -->
        <include refid="defaultSql"></include>
        <where>
            <if test="ids != null and ids.size() > 0">
                <foreach collection="ids" open="id in ( " close=")" item="uid"
                         separator=",">
                    #{uid}
                </foreach>
            </if>
        </where>
    </select>



    <!-- 抽取重复的语句代码片段 -->
    <sql id="defaultSql">
          select * from user
    </sql>


    <select id="queryByIdsAndUserName" resultMap="userMap">
        <include refid="defaultSql"></include>
        where
        id in
        <foreach collection="ids" index="index" item="item" open="("
                 separator="," close=")">
            #{item}
        </foreach>
        and address = #{userAddress}
    </select>


</mapper>